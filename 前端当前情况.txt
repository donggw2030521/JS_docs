=========================目前情况=====================
1.当前pc端开发
        当前pc段开发都是针对于不同项目自己写组件和页面。没用到任何框架，暂时没用的必要。如要使用的话做类似于门户的网站，只建议使用bootstrap框架即可。

2.当前移动端开发
        有用到部分UI框架，比如amazeUI，framework7。需要解决的是各种移动端对应的css的坑。

        移动端小游戏开发，当前都是操作dom，还是使用传统开发来做这种项目。若要发展和做的更好，必须去花时间搞canvas，这个要看需求情况和小游戏的复杂度。


3.网上js库和jquery插件
          目前我们在库上的选择主要是jquery和zepto。

          表单插件 jquery.form.js 封装了ajax以及ajax提交form的方法，推荐php都要熟悉这个框架
          校验插件 jquery.validation.js
          全屏插件 swiper.js和fullpage.js
          滚动条插件 nicescroll，移动端可用的iscroll
          轮播控件 选择很多
          上传插件，我自己去封装个带进度条的，或者使用uploadify或者jquery.upload.js
	      Jquery插件网上轮子很多，可以自己做也可以网上寻找更好的，定制功能很多的情况自己写插件。
	      所见所得ckeditor,ueditor，还有markdown编辑（这个可嵌入的比较少，还需要大量语法规则）
	      图表选型hightchart，echart（涉及地图可选用）
	      -----------------------------------------------------
	      建议phper都把jquery API熟悉了，因为需要后台的地方，主流的还是jquery和原生js，方便起见还是用jquery，所以各种常见插件的api等还需要熟悉的。
	      需要特别了解的是了解js事件流【dom事件的注册与dom事件的委托】，这个对后端来说也很重要。


4.框架优劣对比
          除去SPA开发，
          常用框架bootstrap，jqueryEasyUI，后台管理系统我建议我们还是自己做一个通用框架，这个重点在布局上，没必要使用框架。【待做】


=========================未来要做的=========================
前端重要性不用多说，未来要做好需要做很多：
1.技术选型(js方面)
        angular
        react
        这两个是目前流行的js mvc（MVVM）框架，有数据绑定，依赖注入等特性，路由控制交由前端。
        还有vue.js,backbone和ember.js 等MVC框架

        node开发，node无视连接数量，适应于高并发项目，前后段都用js开发，数据层使用mongoDB，适用于微信上的那种可能面临高并发，数据库设计不是很严格的活动类项目。
        对于即时类应用也可以用node开发


2.前端工程化
        grunt/gulp 自动化构建合并前端js/css等
        模块化开发(require.js_amd和seajs_cmd的选型)
        遵循MVC模式开发编写前端模块[可以自己遵循模式开发，也可用上面的js框架]

        需要给前端自己一个服务器，和建立公司自己的一个CDN，存放js文件和其他静态资源css文件。前端项目完成后，部署到服务器，后端引入各种资源文件或者作开发，直接从前端部署过的项目上拷贝源码。


3.是否需要使用前端模板,做前后端分离的问题
        没有实现前后端分离的开发，没必要使用前端模板，页面view层使用后端的模板就行。
        若前后端分离，可使用restful的风格开发，页面呈现都交给前端，后端只提供数据获取数据的的url，这种方式页面会全部使用ajax了，这种方式适用于SPA，目前可以在CM5上试用这种方式。
        至于门户等常规网站，没必要使用这种方式开发， 后台管理系统或者单页应用才应该考虑。


4.针对HTML 5的新特性在什么项目下使用
        websocket
        webwork
        地理位置
        文件操作
        SVG
        canvas
        WebGL

